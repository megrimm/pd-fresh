#N canvas 262 471 784 303 10;
#X obj 33 86 osc~ 220;
#X obj 33 107 *~ 0.5;
#X obj 177 271 dac~;
#X obj 204 109 *~ 0.5;
#X obj 204 88 osc~ 440;
#X text 370 75 this example will create [catch~ test2.1] \, [catch~
test2.2] \, [throw~ test2.1] \, [throw~ test2.2] and [catch~ test.1]
\, [catch~ test.2] \, [throw~ test.1] \, [throw~ test.2];
#X text 69 14 Acts like throw~ and catch~ but allows more than one
catch~ per throw~. Uses dynamic objet creation to do this. Tested under
PD 0.40.3-Extended (PD-Extended is required).;
#X text 411 243 Author: Paulo Casaes;
#X text 378 124 When a dyncatch~ is deleted it's corresponding catch~
will still exists (giving errors in the console) but next time a dyncatch~
with the same name is created it will use that available throw~.;
#X obj 33 128 mix.dynthrow~ test;
#X obj 204 130 mix.dynthrow~ test2;
#X obj 121 165 mix.dyncatch~ test;
#X obj 248 191 mix.dyncatch~ test;
#X obj 277 227 mix.dyncatch~ test2;
#X obj 53 227 mix.dyncatch~ test2;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 11 0 2 0;
#X connect 12 0 2 1;
#X connect 13 0 2 1;
#X connect 14 0 2 0;
